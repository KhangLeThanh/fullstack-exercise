{"ast":null,"code":"var _jsxFileName = \"/Users/khanglethanh/fullstack_open/part2/coursecontents/src/component/Course.js\";\nimport React from 'react';\n\nconst Header = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, props.header));\n};\n\nconst MultiContent = ({\n  name,\n  parts\n}) => {\n  let sum = parts.map(part => part.exercises).reduce((a, c) => {\n    return a + c;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, name), parts.map(part => /*#__PURE__*/React.createElement(Part, {\n    key: part.id,\n    name: part.name,\n    exercise: part.exercises,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }, \"Total of \", sum, \" exercises\")));\n};\n\nconst Content = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, props.parts.map(content => /*#__PURE__*/React.createElement(MultiContent, {\n    key: content.id,\n    name: content.name,\n    parts: content.parts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst Part = ({\n  name,\n  exercise\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, name, \" \", exercise));\n};\n\nconst Course = props => {\n  const {\n    course\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Web Development curriculum\"), /*#__PURE__*/React.createElement(Header, {\n    header: course.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    parts: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default Course;","map":{"version":3,"sources":["/Users/khanglethanh/fullstack_open/part2/coursecontents/src/component/Course.js"],"names":["React","Header","props","header","MultiContent","name","parts","sum","map","part","exercises","reduce","a","c","id","Content","content","Part","exercise","Course","course"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAU;AACvB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,MAAX,CADF,CADF;AAKD,CAND;;AAQA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAkB;AACrC,MAAIC,GAAG,GAAGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,SAAvB,EAAkCC,MAAlC,CAAyC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAAE,WAAOD,CAAC,GAAGC,CAAX;AAAc,GAAnE,CAAV;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,IAAL,CADF,EAGGC,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACP,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACK,EAAhB;AAAoB,IAAA,IAAI,EAAEL,IAAI,CAACJ,IAA/B;AAAqC,IAAA,QAAQ,EAAEI,IAAI,CAACC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAHH,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkBH,GAAlB,eAAH,CANF,CADF;AAUD,CAbD;;AAeA,MAAMQ,OAAO,GAAIb,KAAD,IAAU;AAExB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACI,KAAN,CAAYE,GAAZ,CAAiBQ,OAAD,iBACb,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,OAAO,CAACF,EAA3B;AAA+B,IAAA,IAAI,EAAEE,OAAO,CAACX,IAA7C;AAAmD,IAAA,KAAK,EAAEW,OAAO,CAACV,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADH,CADF;AAOD,CATD;;AAWA,MAAMW,IAAI,GAAG,CAAC;AAACZ,EAAAA,IAAD;AAAOa,EAAAA;AAAP,CAAD,KAAqB;AAC/B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIb,IAAJ,OAAWa,QAAX,CADD,CADF;AAKF,CAND;;AAQA,MAAMC,MAAM,GAAIjB,KAAD,IAAW;AACtB,QAAM;AAAEkB,IAAAA;AAAF,MAAalB,KAAnB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEG,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEkB,MAAM,CAACf,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAGG,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEe,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CADF;AAOH,CAVD;;AAYA,eAAeD,MAAf","sourcesContent":["import React from 'react'\n\nconst Header = (props) =>{\n  return(\n    <div>\n      <h1>{props.header}</h1>\n    </div>\n  )\n}\n\nconst MultiContent = ({name, parts}) =>{\n  let sum = parts.map(part => part.exercises).reduce((a, c) => { return a + c });\n\n  return(\n    <div>\n      <h2>{name}</h2>\n      \n      {parts.map((part) => \n          <Part key={part.id} name={part.name} exercise={part.exercises}/>\n      )}\n      <p><strong>Total of {sum} exercises</strong></p>\n    </div>\n  )\n}\n\nconst Content = (props) =>{\n\n  return(\n    <div>\n      {props.parts.map((content) => \n          <MultiContent key={content.id} name={content.name} parts={content.parts}/>\n        )}\n    </div>\n  )\n}\n\nconst Part = ({name, exercise}) =>{\n   return(\n     <div>\n      <p>{name} {exercise}</p>\n     </div>\n   )\n}\n\nconst Course = (props) => {\n    const { course } = props\n\n    return (\n      <div>\n        <h1>Web Development curriculum</h1>\n         <Header header={course.name} />\n         <Content parts={course}/>\n      </div>\n    )\n}\n\nexport default Course\n"]},"metadata":{},"sourceType":"module"}