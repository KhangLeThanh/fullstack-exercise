{"ast":null,"code":"var _jsxFileName = \"/Users/khanglethanh/fullstack_open/part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = props => {\n  console.log(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Statistic, {\n    text: \"good\",\n    value: props.good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"neutral\",\n    value: props.neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"bad\",\n    value: props.bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), \"// ...\");\n};\n\nconst Statistic = ({\n  name,\n  value\n}) => {\n  /*#__PURE__*/\n  React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, value));\n};\n\nconst Button = ({\n  onClick,\n  text\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}, text);\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n\n  let total = good + neutral + bad;\n  let average = (good * 1 + neutral * 0 + bad * -1) / total;\n  let positive = good / total * 100;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Give feedback\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleGoodClick,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleNeutralClick,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBadClick,\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"statistics\"), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/khanglethanh/fullstack_open/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Statistics","props","console","log","good","neutral","bad","Statistic","name","value","Button","onClick","text","App","setGood","setNeutral","setBad","handleGoodClick","handleNeutralClick","handleBadClick","total","average","positive","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAGA,KAAK,CAACG,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAGH,KAAK,CAACI,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,KAAhB;AAAsB,IAAA,KAAK,EAAGJ,KAAK,CAACK,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,WADF;AAQD,CAXD;;AAaA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAiB;AACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CAFF;AAKD,CAND;;AAOA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,kBACb;AAAQ,EAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,IADH,CADF;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACT,IAAD,EAAOU,OAAP,IAAkBhB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUU,UAAV,IAAwBjB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMU,MAAN,IAAgBlB,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMmB,eAAe,GAAG,MAAM;AAC5BH,IAAAA,OAAO,CAACV,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAIA,QAAMc,kBAAkB,GAAG,MAAM;AAC/BH,IAAAA,UAAU,CAACV,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAIA,QAAMc,cAAc,GAAG,MAAM;AAC3BH,IAAAA,MAAM,CAACV,GAAG,GAAG,CAAP,CAAN;AACD,GAFD;;AAIA,MAAIc,KAAK,GAAGhB,IAAI,GAAGC,OAAP,GAAiBC,GAA7B;AACA,MAAIe,OAAO,GAAG,CAAEjB,IAAI,GAAE,CAAN,GAAUC,OAAO,GAAC,CAAlB,GAAqBC,GAAG,GAAC,CAAC,CAA5B,IAAiCc,KAA/C;AACA,MAAIE,QAAQ,GAAIlB,IAAI,GAAGgB,KAAR,GAAiB,GAAhC;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,eAAjB;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,kBAAjB;AAAqC,IAAA,IAAI,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,cAAjB;AAAiC,IAAA,IAAI,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEf,IAAlB;AAAwB,IAAA,GAAG,EAAEE,GAA7B;AAAkC,IAAA,OAAO,EAAED,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,CADF;AAkBD,CAvCD;;AAyCAN,QAAQ,CAACwB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n\nconst Statistics = (props) => {\n \n  console.log(props)\n  return(\n    <div>\n      <Statistic text=\"good\" value ={props.good} />\n      <Statistic text=\"neutral\" value ={props.neutral} />\n      <Statistic text=\"bad\" value ={props.bad} />\n      // ...\n    </div>\n  )\n}\n\nconst Statistic = ({name, value})=>{\n  <tr>\n    <td>{name}</td>\n    <td>{value}</td>\n  </tr>\n\n}\nconst Button = ({ onClick, text }) => (\n  <button onClick={onClick}>\n    {text}\n  </button>\n)\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    setGood(good + 1)\n  }\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1)\n  }\n\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n  \n  let total = good + neutral + bad;\n  let average = ( good *1 + neutral*0 +bad*-1) / total;\n  let positive = (good / total) * 100\n  return (\n    <div>\n      <div>\n        <h2>Give feedback</h2>\n        \n        <Button onClick={handleGoodClick} text='good' />\n        <Button onClick={handleNeutralClick} text='neutral' />\n        <Button onClick={handleBadClick} text='bad' />\n\n      </div>\n      <div>\n        <h2>statistics</h2>\n        <Statistics good={good} bad={bad} neutral={neutral} />\n       \n\n      </div>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}