{"ast":null,"code":"var _jsxFileName = \"/Users/khanglethanh/fullstack_open/part2/countries/src/component/CountryDetails.js\";\nimport React, { useState } from 'react';\nimport Weather from './Weather';\n\nconst CountryDetails = ({\n  country,\n  filter\n}) => {\n  const [count, setCounts] = useState('');\n  let result = country.filter(item => item.name.toLowerCase().includes(filter));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, result.length < 10 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, result.length > 1 ? result.map((filterCountry, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    id: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, filterCountry.name, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    value: idx,\n    onClick: e => setCounts(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 47\n    }\n  }, \"show\"))), idx === parseInt(count) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, filterCountry.name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"capital \", filterCountry.capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"population \", filterCountry.population), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, filterCountry.languages.map((language, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, language.name))), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '250px',\n      height: '250px'\n    },\n    src: filterCountry.flag,\n    alt: \"country_flag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }, \"Weather in \", filterCountry.capital), /*#__PURE__*/React.createElement(Weather, {\n    country: filterCountry.capital,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }))) : result.map((filterCountry, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, filterCountry.name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"capital \", filterCountry.capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"population \", filterCountry.population), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, filterCountry.languages.map((language, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, language.name))), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '250px',\n      height: '250px'\n    },\n    src: filterCountry.flag,\n    alt: \"country_flag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Weather, {\n    country: filterCountry.capital,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Too many matches, specify another filter\"));\n};\n\nexport default CountryDetails;","map":{"version":3,"sources":["/Users/khanglethanh/fullstack_open/part2/countries/src/component/CountryDetails.js"],"names":["React","useState","Weather","CountryDetails","country","filter","count","setCounts","result","item","name","toLowerCase","includes","length","map","filterCountry","idx","e","target","value","parseInt","capital","population","languages","language","index","width","height","flag"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react'\nimport Weather from './Weather';\n\n\nconst CountryDetails = ({country,filter}) =>{\n  const [count, setCounts] = useState('');\n  let result = country.filter(item => item.name.toLowerCase().includes(filter))\n \n  return(\n    <div>\n     {result.length < 10 ?\n        <div>\n          {result.length > 1 ?\n            result.map((filterCountry,idx) => (\n              <div key={idx} id={idx}>\n                <p>{filterCountry.name} <span><button value={idx} onClick={(e) => setCounts(e.target.value)}>show</button></span></p>       \n                {idx === parseInt(count) ?\n                  <div>\n                    <h1>{filterCountry.name} </h1>          \n                    <p>capital {filterCountry.capital}</p>\n                    <p>population {filterCountry.population}</p>\n                    <h2>languages</h2>\n                    <ul>\n                      {filterCountry.languages.map((language,index)=>(\n                        <li key={index}>\n                            {language.name}\n                        </li>\n                      ))}\n                    </ul>\n                    <img style={{width:'250px', height:'250px'}} src={filterCountry.flag} alt=\"country_flag\" />\n                      <h2>Weather in {filterCountry.capital}</h2>\n                      <Weather country={filterCountry.capital}/>\n                  </div>\n                :\n                  <div></div>\n                }\n              </div>\n            ))\n          :\n            result.map((filterCountry,idx) => (\n              <div key={idx}>\n                <h1>{filterCountry.name} </h1>          \n                <p>capital {filterCountry.capital}</p>\n                <p>population {filterCountry.population}</p>\n                <h2>languages</h2>\n                <ul>\n                  {filterCountry.languages.map((language,index)=>(\n                    <li key={index}>\n                        {language.name}\n                    </li>\n                  ))}\n                </ul>\n                <img style={{width:'250px', height:'250px'}} src={filterCountry.flag} alt=\"country_flag\" />\n                <Weather country={filterCountry.capital}/>\n\n              </div>\n            ))\n          } \n        </div>\n        : \n          <p>Too many matches, specify another filter</p>\n        }   \n     \n    </div>\n  )\n}\n\nexport default CountryDetails\n"]},"metadata":{},"sourceType":"module"}