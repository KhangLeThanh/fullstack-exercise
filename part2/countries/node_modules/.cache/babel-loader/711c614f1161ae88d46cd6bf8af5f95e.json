{"ast":null,"code":"var _jsxFileName = \"/Users/khanglethanh/fullstack_open/part2/countries/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [find_country, setFindCountries] = useState('');\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n\n  const handleFilter = event => {\n    setFindCountries(event.target.value);\n  };\n\n  let result = countries.filter(country => country.name.toLowerCase().includes(find_country));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"find countries: \", /*#__PURE__*/React.createElement(\"input\", {\n    value: find_country,\n    onChange: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }\n  }), result.length < 10 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, result.length > 1 ? result.map((filterCountry, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, filterCountry.name, \" \"))) : result.map((filterCountry, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, filterCountry.name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"capital \", filterCountry.capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"population \", filterCountry.population), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, filterCountry.languages.map((language, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, language.name)))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Too many matches, specify another filter\"));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/khanglethanh/fullstack_open/part2/countries/src/index.js"],"names":["React","useState","useEffect","axios","ReactDOM","App","countries","setCountries","find_country","setFindCountries","get","then","response","data","handleFilter","event","target","value","result","filter","country","name","toLowerCase","includes","length","map","filterCountry","idx","capital","population","languages","language","index","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA6BN,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAAEO,YAAF,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFO,GADH,CACO,sCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBL,MAAAA,YAAY,CAACK,QAAQ,CAACC,IAAV,CAAZ;AACD,KAJH;AAMD,GAPQ,EAON,EAPM,CAAT;;AAQA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BN,IAAAA,gBAAgB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACD,GAFD;;AAGA,MAAIC,MAAM,GAAGZ,SAAS,CAACa,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCf,YAApC,CAA5B,CAAb;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACkB;AACV,IAAA,KAAK,EAAEA,YADG;AAEV,IAAA,QAAQ,EAAEM,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,EAIGI,MAAM,CAACM,MAAP,GAAgB,EAAhB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MAAM,CAACM,MAAP,GAAgB,CAAhB,GACCN,MAAM,CAACO,GAAP,CAAW,CAACC,aAAD,EAAeC,GAAf,kBACT;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,aAAa,CAACL,IAAlB,MADF,CADF,CADD,GAOCH,MAAM,CAACO,GAAP,CAAW,CAACC,aAAD,EAAeC,GAAf,kBACT;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,aAAa,CAACL,IAAnB,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYK,aAAa,CAACE,OAA1B,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeF,aAAa,CAACG,UAA7B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,aAAa,CAACI,SAAd,CAAwBL,GAAxB,CAA4B,CAACM,QAAD,EAAUC,KAAV,kBAC3B;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QAAQ,CAACV,IADd,CADD,CADH,CALF,CADF,CARJ,CADD,gBA2BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDA/BN,CADF;AAoCD,CApDD;;AAsDAjB,QAAQ,CAAC6B,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState,  useEffect }  from 'react'\nimport axios from 'axios'\n\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  const [ countries, setCountries] = useState([]) \n  const [ find_country, setFindCountries] = useState('') \n\n  useEffect(() => {\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        setCountries(response.data)\n      })\n      \n  }, [])\n  const handleFilter = (event) => {\n    setFindCountries(event.target.value)\n  }\n  let result = countries.filter(country => country.name.toLowerCase().includes(find_country))\n  return (\n    <div>\n      find countries: <input  \n            value={find_country}\n            onChange={handleFilter}/>\n      {result.length < 10 ?\n        <div>\n          {result.length > 1 ?\n            result.map((filterCountry,idx) => (\n              <div key={idx}>\n                <p>{filterCountry.name} </p>          \n              </div>\n            ))\n          :\n            result.map((filterCountry,idx) => (\n              <div key={idx}>\n                <h1>{filterCountry.name} </h1>          \n                <p>capital {filterCountry.capital}</p>\n                <p>population {filterCountry.population}</p>\n                <h2>languages</h2>\n                <ul>\n                  {filterCountry.languages.map((language,index)=>(\n                    <li key={index}>\n                        {language.name}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))\n          } \n        </div>\n        : \n          <p>Too many matches, specify another filter</p>\n        }\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}