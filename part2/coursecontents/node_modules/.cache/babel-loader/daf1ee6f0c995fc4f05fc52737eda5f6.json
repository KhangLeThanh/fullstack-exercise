{"ast":null,"code":"var _jsxFileName = \"/Users/khanglethanh/fullstack_open/part2/coursecontents/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = props => {\n  console.log(props);\n  let total = props.good + props.neutral + props.bad;\n  let average = (props.good * 1 + props.neutral * 0 + props.bad * -1) / total;\n  let positive = props.good / total * 100;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"statistics\"), total == 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \" No feedback given\") : /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Statistic, {\n    text: \"good\",\n    value: props.good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"neutral\",\n    value: props.neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"bad\",\n    value: props.bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"all\",\n    value: total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"average\",\n    value: average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"positive\",\n    value: positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, text), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, value));\n};\n\nconst Button = ({\n  onClick,\n  text\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}, text);\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Give feedback\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleGoodClick,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleNeutralClick,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBadClick,\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/khanglethanh/fullstack_open/part2/coursecontents/src/index.js"],"names":["React","useState","ReactDOM","Statistics","props","console","log","total","good","neutral","bad","average","positive","Statistic","text","value","Button","onClick","App","setGood","setNeutral","setBad","handleGoodClick","handleNeutralClick","handleBadClick","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n\nconst Statistics = (props) => {\n \n  console.log(props)\n  let total = props.good + props.neutral + props.bad;\n  let average = ( props.good *1 + props.neutral*0 +props.bad*-1) / total;\n  let positive = (props.good / total) * 100\n  return(\n    <div>\n      <h2>statistics</h2>\n      {total == 0 ?\n        <p> No feedback given</p>\n      :\n        <table>\n\n          <Statistic text=\"good\" value ={props.good} />\n          <Statistic text=\"neutral\" value ={props.neutral} />\n          <Statistic text=\"bad\" value ={props.bad} />\n          <Statistic text=\"all\" value ={total} />\n          <Statistic text=\"average\" value ={average} />\n          <Statistic text=\"positive\" value ={positive} />\n        </table>\n      }\n    </div>\n  )\n}\n\nconst Statistic = ({text, value})=>{\n  return( \n  <tr>\n    <td>{text}</td>\n    <td>{value}</td>\n  </tr>\n  )\n}\nconst Button = ({ onClick, text }) => (\n  <button onClick={onClick}>\n    {text}\n  </button>\n)\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    setGood(good + 1)\n  }\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1)\n  }\n\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n  \n  \n  return (\n    <div>\n      <div>\n        <h2>Give feedback</h2>\n        \n        <Button onClick={handleGoodClick} text='good' />\n        <Button onClick={handleNeutralClick} text='neutral' />\n        <Button onClick={handleBadClick} text='bad' />\n\n      </div>\n      <div>\n        <Statistics good={good} bad={bad} neutral={neutral} />\n       \n\n      </div>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}