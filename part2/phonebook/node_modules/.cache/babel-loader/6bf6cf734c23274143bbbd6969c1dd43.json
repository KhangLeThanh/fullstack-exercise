{"ast":null,"code":"var _jsxFileName = \"/Users/khanglethanh/fullstack_open/part2/phonebook/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Filter from './component/Filter';\nimport PersonForm from './component/PersonForm';\nimport Persons from './component/Persons';\nimport Notification from './component/Notification';\nimport personService from './services/persons';\nimport './index.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newInfo, setNewInfo] = useState({\n    name: \"\",\n    number: \"\"\n  });\n  const [filterName, setFilterName] = useState('');\n  const [successMessage, setSuccessrMessage] = useState('');\n  useEffect(() => {\n    console.log('effect');\n    setSuccessrMessage(null);\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleFilter = newValue => {\n    setFilterName(newValue);\n  };\n\n  const handleChange = event => {\n    const value = event.target.value;\n    setNewInfo({ ...newInfo,\n      [event.target.name]: value\n    });\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    if (newInfo.name !== undefined) {\n      if (persons.some(person => person.name === newInfo.name)) {\n        let answer = window.confirm(`${newInfo.name} is already added to phonebook, replace the old number with a new one?`);\n        const person = persons.find(n => n.name === newInfo.name);\n        const changedInfo = { ...person,\n          number: newInfo.number\n        };\n\n        if (answer === true) {\n          personService.update(changedInfo.id, changedInfo).then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== changedInfo.id ? person : returnedPerson));\n            setSuccessrMessage(`User ${newInfo.name} has changed number to: ${newInfo.number}`);\n            setTimeout(() => {\n              setSuccessrMessage(null);\n            }, 5000);\n          });\n        }\n      } else {\n        const personObject = {\n          name: newInfo.name,\n          number: newInfo.number\n        };\n        personService.create(personObject).then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setNewInfo('');\n          setSuccessrMessage(`Added ${newInfo.name}`);\n          setTimeout(() => {\n            setSuccessrMessage(null);\n          }, 5000);\n        });\n      }\n    }\n  };\n\n  const removedPerson = id => {\n    const person = persons.find(person => person.id === id);\n    const deletedPerson = { ...person\n    };\n    personService.deleteId(id, deletedPerson).then(returnedPerson => {\n      setPersons(persons.map(person => person.id !== id ? person : returnedPerson).filter(value => Object.keys(value).length !== 0));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Notification, {\n    message: successMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Filter, {\n    value: filterName,\n    onChange: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"add a new\"), /*#__PURE__*/React.createElement(PersonForm, {\n    values: newInfo,\n    onChange: handleChange,\n    onSubmit: addPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), persons.filter(contact => contact.name.toLowerCase().includes(filterName)).map((contact, i) => /*#__PURE__*/React.createElement(Persons, {\n    key: i,\n    person: contact,\n    removedPerson: () => {\n      if (window.confirm(`Delete ${contact.name} ?`)) removedPerson(contact.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/khanglethanh/fullstack_open/part2/phonebook/src/index.js"],"names":["React","useState","useEffect","ReactDOM","Filter","PersonForm","Persons","Notification","personService","App","persons","setPersons","newInfo","setNewInfo","name","number","filterName","setFilterName","successMessage","setSuccessrMessage","console","log","getAll","then","initialPersons","handleFilter","newValue","handleChange","event","value","target","addPerson","preventDefault","undefined","some","person","answer","window","confirm","find","n","changedInfo","update","id","returnedPerson","map","setTimeout","personObject","create","concat","removedPerson","deletedPerson","deleteId","filter","Object","keys","length","contact","toLowerCase","includes","i","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState,  useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Filter from './component/Filter'\nimport PersonForm from './component/PersonForm'\nimport Persons from './component/Persons'\nimport Notification from './component/Notification'\n\nimport personService from './services/persons'\nimport './index.css'\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newInfo, setNewInfo] = useState({\n    name: \"\",\n    number: \"\"\n  })\n  const [filterName, setFilterName] = useState('')\n  const [successMessage, setSuccessrMessage] = useState('')\n\n  useEffect(() => {\n    console.log('effect')\n    setSuccessrMessage(null)\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n      \n  }, [])\n  const handleFilter = (newValue)=> {\n    setFilterName(newValue)  \n    \n  }\n  const handleChange = (event) => {\n    const value = event.target.value;\n    setNewInfo({\n      ...newInfo,\n      [event.target.name]: value\n    });\n  }\n  const addPerson = (event) => {\n    event.preventDefault()\n    \n    if(newInfo.name !== undefined){\n      \n      if(persons.some(person => person.name === newInfo.name)){\n        let answer = window.confirm(`${newInfo.name} is already added to phonebook, replace the old number with a new one?`);\n        const person = persons.find(n => n.name === newInfo.name)\n        const changedInfo = { ...person, number: newInfo.number}\n        if(answer === true){\n          personService\n            .update(changedInfo.id, changedInfo)\n              .then(returnedPerson => {\n                setPersons(persons.map(person => person.id !== changedInfo.id ? person : returnedPerson))\n                setSuccessrMessage(`User ${newInfo.name} has changed number to: ${newInfo.number}`)\n                setTimeout(() => {\n                  setSuccessrMessage(null)\n                }, 5000)\n            })\n        }  \n      } \n      else{\n        const personObject = {\n          name: newInfo.name,\n          number: newInfo.number\n        } \n        personService\n          .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNewInfo('')\n            setSuccessrMessage(`Added ${newInfo.name}`)\n            setTimeout(() => {\n              setSuccessrMessage(null)\n            }, 5000)\n    \n          })\n          \n        \n      }\n    }\n  }\n  const removedPerson = id => {\n    const person = persons.find(person => person.id === id)\n    const deletedPerson = { ...person}\n\n    personService\n      .deleteId(id, deletedPerson)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== id ? person : returnedPerson).filter(value => Object.keys(value).length !== 0))\n      })\n    \n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={successMessage} />\n      <Filter  value={filterName} onChange={handleFilter}/>\n      <h2>add a new</h2>\n      <PersonForm values={newInfo} onChange={handleChange} onSubmit={addPerson} />  \n      <h2>Numbers</h2>\n      {persons\n        .filter( contact =>contact.name.toLowerCase().includes(filterName)) \n        .map((contact, i) => \n          <Persons\n            key={i}\n            person={contact} \n            removedPerson={() => {if (window.confirm(`Delete ${contact.name} ?`)) removedPerson(contact.id)}}\n          />\n      )}\n        \n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}